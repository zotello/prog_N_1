#!/usr/bin/env groovy

boolean success = true
def dockerRegistry = "registry.open-sys.org"

properties([
    disableConcurrentBuilds()
])


    pipeline {
        /*stage('Checkout') {
            checkout([
                $class: 'GitSCM',
                branches: scm.branches,
                extensions: scm.extensions + [
                    [$class: 'CleanBeforeCheckout'],
                    [$class: 'PathRestriction', excludedRegions: '', includedRegions: '^RMQ/docker/rabbitmq/.*$']
                ],
                submoduleCfg: [],
                userRemoteConfigs: [
                    [credentialsId: 'jenkins-azotov', url: 'git@github.com:caliber223/jenkins_test3.git']
                ]
            ])

            sh 'env | sort'
        }*/

        agent {
            label 'master'
        }
        options {
            timestamps()
        }
        stages {
            stage('Checkout') {
                steps {
                    checkout([
                        $class: 'GitSCM',
                        branches: scm.branches,
                        extensions: scm.extensions + [
                            [$class: 'CleanBeforeCheckout'],
                            [$class: 'PathRestriction', excludedRegions: '', includedRegions: '^RMQ/docker/rabbitmq/.*$']
                        ],
                        submoduleCfg: [],
                        userRemoteConfigs: [
                            [credentialsId: 'docker-registry-az', url: 'git@github.com:zotello/prog_N_1.git']
                        ]
                    ])
                }
            }


            /*stage('docker login') {
                steps {
                    echo "====================     docker login     ======================="
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-az223', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        sh "docker login -u $USERNAME -p $PASSWORD"
                    }
                }
            } */

            stage('Build') {
                steps {
                    echo "==================== start building image ======================="
                    dir('RMQ/docker/rabbitmq') {
                        sh 'make docker'
                    }
                }
            }

            stage('Push') {
                steps {
                    echo "==================== start pushing image  ======================="
                    dir('RMQ/docker/rabbitmq') {
                        sh 'make push'
                        sh 'make push TAG=latest'
                    }
                }
            }
        } 

    } 
